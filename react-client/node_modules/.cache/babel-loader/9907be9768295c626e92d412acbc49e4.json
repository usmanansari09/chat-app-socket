{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\nodejs-new\\\\react-client\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useRef } from 'react';\nimport io from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SOCKET_SERVER_URL = 'http://localhost:3001';\n\nfunction App() {\n  _s();\n\n  const [message, setMessage] = useState('');\n  const [chat, setChat] = useState([]);\n  const socketRef = useRef();\n  useEffect(() => {\n    // Create a new socket connection\n    socketRef.current = io(SOCKET_SERVER_URL); // Listen for incoming messages\n\n    socketRef.current.on('receiveMessage', message => {\n      setChat(prevChat => [...prevChat, message]);\n    }); // Cleanup on component unmount\n\n    return () => {\n      socketRef.current.disconnect();\n    };\n  }, []);\n\n  const sendMessage = () => {\n    if (message.trim() !== '') {\n      socketRef.current.emit('sendMessage', message);\n      setMessage('');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Chat Application\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: chat.map((msg, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n        children: msg\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: message,\n      onChange: e => setMessage(e.target.value),\n      placeholder: \"Type your message...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: sendMessage,\n      children: \"Send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"axzHYX97qNY+S42iEIiIh7tf3UU=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/User/Documents/nodejs-new/react-client/src/App.js"],"names":["React","useEffect","useState","useRef","io","SOCKET_SERVER_URL","App","message","setMessage","chat","setChat","socketRef","current","on","prevChat","disconnect","sendMessage","trim","emit","map","msg","index","e","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,MAArC,QAAmD,OAAnD;AACA,OAAOC,EAAP,MAAe,kBAAf;;AAEA,MAAMC,iBAAiB,GAAG,uBAA1B;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACO,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAMS,SAAS,GAAGR,MAAM,EAAxB;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACd;AACAU,IAAAA,SAAS,CAACC,OAAV,GAAoBR,EAAE,CAACC,iBAAD,CAAtB,CAFc,CAId;;AACAM,IAAAA,SAAS,CAACC,OAAV,CAAkBC,EAAlB,CAAqB,gBAArB,EAAwCN,OAAD,IAAa;AAClDG,MAAAA,OAAO,CAAEI,QAAD,IAAc,CAAC,GAAGA,QAAJ,EAAcP,OAAd,CAAf,CAAP;AACD,KAFD,EALc,CASd;;AACA,WAAO,MAAM;AACXI,MAAAA,SAAS,CAACC,OAAV,CAAkBG,UAAlB;AACD,KAFD;AAGD,GAbQ,EAaN,EAbM,CAAT;;AAeA,QAAMC,WAAW,GAAG,MAAM;AACxB,QAAIT,OAAO,CAACU,IAAR,OAAmB,EAAvB,EAA2B;AACzBN,MAAAA,SAAS,CAACC,OAAV,CAAkBM,IAAlB,CAAuB,aAAvB,EAAsCX,OAAtC;AACAC,MAAAA,UAAU,CAAC,EAAD,CAAV;AACD;AACF,GALD;;AAOA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,gBACGC,IAAI,CAACU,GAAL,CAAS,CAACC,GAAD,EAAMC,KAAN,kBACR;AAAA,kBAAgBD;AAAhB,SAAQC,KAAR;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YAFF,eAOE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,KAAK,EAAEd,OAFT;AAGE,MAAA,QAAQ,EAAGe,CAAD,IAAOd,UAAU,CAACc,CAAC,CAACC,MAAF,CAASC,KAAV,CAH7B;AAIE,MAAA,WAAW,EAAC;AAJd;AAAA;AAAA;AAAA;AAAA,YAPF,eAaE;AAAQ,MAAA,OAAO,EAAER,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAbF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD;;GA5CQV,G;;KAAAA,G;AA8CT,eAAeA,GAAf","sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\nimport io from 'socket.io-client';\n\nconst SOCKET_SERVER_URL = 'http://localhost:3001';\n\nfunction App() {\n  const [message, setMessage] = useState('');\n  const [chat, setChat] = useState([]);\n  const socketRef = useRef();\n\n  useEffect(() => {\n    // Create a new socket connection\n    socketRef.current = io(SOCKET_SERVER_URL);\n\n    // Listen for incoming messages\n    socketRef.current.on('receiveMessage', (message) => {\n      setChat((prevChat) => [...prevChat, message]);\n    });\n\n    // Cleanup on component unmount\n    return () => {\n      socketRef.current.disconnect();\n    };\n  }, []);\n\n  const sendMessage = () => {\n    if (message.trim() !== '') {\n      socketRef.current.emit('sendMessage', message);\n      setMessage('');\n    }\n  };\n\n  return (\n    <div>\n      <h1>Chat Application</h1>\n      <div>\n        {chat.map((msg, index) => (\n          <p key={index}>{msg}</p>\n        ))}\n      </div>\n      <input\n        type=\"text\"\n        value={message}\n        onChange={(e) => setMessage(e.target.value)}\n        placeholder=\"Type your message...\"\n      />\n      <button onClick={sendMessage}>Send</button>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}