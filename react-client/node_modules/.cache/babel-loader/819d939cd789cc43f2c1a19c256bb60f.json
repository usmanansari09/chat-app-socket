{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\nodejs-new\\\\react-client\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useRef, useState } from \"react\";\nimport \"./App.css\";\nimport { io } from \"socket.io-client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const socket = useRef();\n  const [message, setMessage] = useState('');\n  const [chat, setChat] = useState([]);\n  useEffect(() => {\n    socket.current = io(\"ws://localhost:3001\");\n    socket.current.on(\"connnection\", () => {\n      console.log(\"connected to server\");\n    });\n  }, []);\n\n  const handleClick = () => {\n    socket.current.emit(\"message\", message);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Chat Application\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: chat.map((msg, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n        children: msg\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: message,\n      onChange: e => setMessage(e.target.value),\n      placeholder: \"Type a message...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleClick,\n      children: \"Send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"lto6+lQd2x5fH3CQmb1PNoAo6Ds=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/User/Documents/nodejs-new/react-client/src/App.js"],"names":["useEffect","useRef","useState","io","App","socket","message","setMessage","chat","setChat","current","on","console","log","handleClick","emit","map","msg","index","e","target","value"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,MAApB,EAA4BC,QAA5B,QAA4C,OAA5C;AACA,OAAO,WAAP;AAEA,SAASC,EAAT,QAAmB,kBAAnB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAMC,MAAM,GAAGJ,MAAM,EAArB;AACA,QAAM,CAACK,OAAD,EAAUC,UAAV,IAAwBL,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACM,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,EAAD,CAAhC;AACAF,EAAAA,SAAS,CAAC,MAAM;AACdK,IAAAA,MAAM,CAACK,OAAP,GAAiBP,EAAE,CAAC,qBAAD,CAAnB;AAEAE,IAAAA,MAAM,CAACK,OAAP,CAAeC,EAAf,CAAkB,aAAlB,EAAiC,MAAM;AACrCC,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACD,KAFD;AAGD,GANQ,EAMN,EANM,CAAT;;AAQA,QAAMC,WAAW,GAAG,MAAM;AACxBT,IAAAA,MAAM,CAACK,OAAP,CAAeK,IAAf,CAAoB,SAApB,EAA+BT,OAA/B;AACD,GAFD;;AAIA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,gBACGE,IAAI,CAACQ,GAAL,CAAS,CAACC,GAAD,EAAMC,KAAN,kBACR;AAAA,kBAAgBD;AAAhB,SAAQC,KAAR;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YAFF,eAOE;AACE,MAAA,KAAK,EAAEZ,OADT;AAEE,MAAA,QAAQ,EAAGa,CAAD,IAAOZ,UAAU,CAACY,CAAC,CAACC,MAAF,CAASC,KAAV,CAF7B;AAGE,MAAA,WAAW,EAAC;AAHd;AAAA;AAAA;AAAA;AAAA,YAPF,eAYE;AAAQ,MAAA,OAAO,EAAEP,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAZF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD;;GAhCQV,G;;KAAAA,G;AAkCT,eAAeA,GAAf","sourcesContent":["import { useEffect, useRef, useState } from \"react\";\nimport \"./App.css\";\n\nimport { io } from \"socket.io-client\";\n\nfunction App() {\n  const socket = useRef();\n  const [message, setMessage] = useState('');\n  const [chat, setChat] = useState([]);\n  useEffect(() => {\n    socket.current = io(\"ws://localhost:3001\");\n\n    socket.current.on(\"connnection\", () => {\n      console.log(\"connected to server\");\n    });\n  }, []);\n\n  const handleClick = () => {\n    socket.current.emit(\"message\", message);\n  };\n\n  return (\n    <div>\n      <h1>Chat Application</h1>\n      <div>\n        {chat.map((msg, index) => (\n          <p key={index}>{msg}</p>\n        ))}\n      </div>\n      <input\n        value={message}\n        onChange={(e) => setMessage(e.target.value)}\n        placeholder=\"Type a message...\"\n      />\n      <button onClick={handleClick}>Send</button>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}